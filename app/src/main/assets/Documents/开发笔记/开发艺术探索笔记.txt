开发艺术探索笔记

第一章 Activity的生命周期和启动模式
onCreate：表示activity正在被创建，在此可以做一些初始化工作，加载布局资源，初始化activity所需要的数据
onRestart：表示activity正在重新启动，在执行了onStop，未执行onDestory前，又回到这个activity，就会执行。
onStart：表示activity正在被启动，此时activity可见，但还没有出现在前台，无法与用户交互。这时候可以理解为activity已经显示出来了，但是我们还看不到。
onResume：表示activity已经可见了，出现在前台开始活动。onStart和onResume都表示activity可见，但是onStart的时候页面还在后台，onResume的时候显示到前台。view的onMeasure，onLayout，onDraw在此时执行。
onPause：表示activity正在停止，正常情况下onStop会紧接着被调用。如在跳转页面时，页面启动崩溃，又返回到此页面，onStop来不及执行，会直接调用onResume。onPause可以做一些存储数据，停止动画等工作，不能太耗时，因为只有onPause先执行完，新页面的onResume才会执行。页面上的弹窗不会执行onPause
onStop：表示activity即将停止，可以做一些稍微重量级的回收工作，同样不能太耗时
onDestory：表示activity即将被销毁，可以做一些回收工作和最重的资源释放。

onStrat和onStop、onResume和onPause有什么不同？
onStrat和onStop是从activity是否可见这个角度来回调的；onResume和onPause是从activity是否位于前台这个角度来回调的，除此之外，无其他明显区别。










●04.Intent：意图，分显式与隐式两种，显式为指定了component属性，明确启动哪个组件；隐式是搜索符合条件的组件，供用户选择。
1）构造函数：可以是类名、action、Component（setClass）。
2）明确启动组件component（setComponent()）：明确需要启动组件，与xml中对应。
3）操作类型action（setAction()）：Java代码中只能存在一个，存在则必须有一个相同；xml中可存在多个。
4）类别筛选category（addCategory()）：Java代码中存在几个匹配几个，xml中可存在多个。
5）数据类型data与type：setDataAndType()，地址有特定规则，要么同时设置，要么单独只设置一个。
6）启动模式LaunchMode四种（manifest中用）：standard（标准），singleTop（栈顶复用），singleTask（类似于单例，独一份，再次进入后清空在其之上的实例），singleInstance（每次启动都是独立栈中的独一份）
7）标志也即启动模式（Intent中用）：
FLAG_ACTIVITY_NEW_TASK(需要搭配FLAG_ACTIVITY_CLEAR_TASK使用)；
FLAG_ACTIVITY_SINGLE_TOP,FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS(跳转页面后自动finish）；
android:excludeFromRecents="true"，目前未起作用)。
8）数据传递bundle：Intent内部已经封装好，不用自己封了，serializable，parcelable，也可以转成json字符串传过去。
9）也可以定义一个静态类，每次跳转页面前添加数据到静态类，跳转完成后从静态类中取出，同时移除。
