Java
●01.面向对象程序设计 object-oriented programming：具有状态，行为，标识。
　　1）万物皆对象。解释：Object是所有的类的父类。
　　2）程序是对象的集合，它们通过发送消息来告知彼此所需要做的。解释：其实就是请求方法。
　　3）每个对象都有自己的由其他对象所构成的存储。解释：对象的集合体依然是对象。
　　4）每个对象都拥有其类型。解释：每个对象都是某个类（class）的一个实例（instance）。举例来说就是电脑是个对象，其中包含的cpu，GPU等是他的属性，属性所在的文件是“类”（class），创建这个类，即为创建电脑，也就是对象或者说实例。
　　5)某一特定类型的所有对象都可以接收同样的消息。解释：其实就是遵循六大原则中的“依赖倒转原则”，表现为继承与多态两个特性。
　　6）对象具有状态（内部数据表示了他的状态）、行为（方法产生行为）、标识（内存中的地址唯一，但对于脱离与内存之外的对象，需要通过其他方法来标识唯一，比如：自定义的相同标识）。
　　7）对象（实例）可以说是一个定义了特性（属性，数据元素）和行为（方法、功能）的某个特定的类。
　　8）问题空间中的元素和解空间的对象之间创建一对一的映射。
　　9）每个对象都有一个接口。解释：对象中的方法也可以看成是来自于一个无形中的接口。
●02.Java构成：Java语言可以看成是一系列对象的集合，这些对象通过调用彼此的方法来协同工作；
　　1）对象：是类的一个实例，存在于内存中，具有状态和行为；如一条狗是一个对象，狗的颜色，名字，种类是状态，摇尾巴，蹲坐是行为。
　　2）类：是一个模板，也就是代码，描述对象的状态与行为；所有的类都是有属性（变量，状态）和方法（行为）组成的。
　　3）方法：就是行为，可以有很多种，逻辑运算、数据修改以及所有的动作都是在方法中完成的。
　　4）实例变量：每个对象都有独特的实例变量，对象的状态由此决定。
　　成员变量：如有final修饰则不可变
　　局部变量：如有final修饰则不可变
　　静态变量：类变量，static修饰
　　5）空白行，或者有注释的行，java编译期会自动忽略
●03.java三大特性：封装，继承，多态。
　　1）封装，隐藏实现，对外暴露必须的方法。
　　2）继承，依赖于基类，独立于实现(开闭原则)。
　　源类又名：基类，超类，父类
　　副本又名：导出类，继承类，子类。
　　纯粹替代：替代原则，is-a（是一个）无添加；is-like-a（像一个）有添加新方法。
　　3）多态，依赖于继承；应用的设计模式有：策略模式，状态模式。前期绑定，后期动态绑定
●04.Java基本数据类型：变量就是申请内存来存储值，即创建变量就需要分配内存。内存管理系统根据变量的类型来为变量分配存储空间。
　　1）内置数据类型：八种基本类型，都有对应的包装类
　　2）引用数据类型：由类的构造函数创建。
　　3）Java常量
●.
　　1）


单根继承结构
人们所能够解决的问题的复杂性直接取决于抽象的类型和质量。
解空间：机器模型
问题空间：待解决的问题模型
UML：Unified Modelling Language 统一建模语言

JAVA锁机制，原子性
