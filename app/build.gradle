apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'//kotlin view 注入工具
apply plugin: 'kotlin-kapt'//kotlin的annotationProcessor
apply from:"${rootDir}/buildgradle/basebuild.gradle"
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.appcompat:appcompat:$APPCOMPAT_VERSION"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //    implementation 'com.facebook.fresco:fresco:1.4.0'
//    implementation("com.facebook.fresco:imagepipeline-okhttp3:${FRESCO_VERSION}") {
//        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
//    }
    implementation "com.google.code.gson:gson:$GSON_VERSION"
    implementation project(':libdesign')
    implementation project(':libsdk')
    implementation project(':rxbus')
    if (!IS_APP.toBoolean()) {
        implementation project(':puzzle')
        implementation project(':g2048')
    }
//    implementation (name:'apiutils',ext:'aar')
//    implementation 'org.codehaus.groovy:groovy-all:2.5.5'
    //butterknife
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    //kapt对应kotlin，未用kotlin用annotationProcessor
    kapt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    //butterknife
}
def keyPass = rootProject.file("local.properties")
def key = new Properties()
key.load(new FileInputStream(keyPass))
android {
    defaultConfig {
        // dex突破65535的限制
//        multiDexEnabled true
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        manifestPlaceholders = [CHANNEL_VALUE: "umeng"]//默认是umeng的渠道
        ndk {
            //添加对应cpu类型的.so库。
            abiFilters 'armeabi-v7a', 'armeabi-v8a', 'armeabi', 'x86'
        }
    }
}

