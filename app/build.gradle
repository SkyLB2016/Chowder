apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:cardview-v7:$googleVer"
    implementation "com.android.support:appcompat-v7:$googleVer"
    implementation "com.android.support:design:$googleVer"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation project(':apiutils')
    //butterknife
    annotationProcessor "com.jakewharton:butterknife-compiler:$bknifeVer"
    kapt "com.jakewharton:butterknife-compiler:$bknifeVer"
    //butterknife
}
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.sky.chowder"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 2
        versionName "2.0"
        // dex突破65535的限制
//        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [CHANNEL_VALUE: "umeng"]//默认是umeng的渠道
    }
    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }
        release {
            versionNameSuffix "-release"
            minifyEnabled false //是否开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release  //签名
            zipAlignEnabled true //Zipalign优化
        }
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }
    flavorDimensions "sky"
    productFlavors {
        sky {
            dimension "sky"
        }
//        GooglePlay {}
//        xiaomi {}
//        umeng {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }
}