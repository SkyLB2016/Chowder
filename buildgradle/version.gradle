def excludes = [
        'library',
        'processor'
]
def versions = [
        'app'       : [
                'verCode': 3,
                'verName': '3.0.0'
        ],
        'puzzle'    : [
                'verCode' : 1,
                'verName': '1.0.0'
        ],
        'g2048'     : [
                'verCode' : 1,
                'verName': '1.0.0'
        ],
        'libsdk'   : [
                'verCode' : 1,
                'verName': '1.0.0'
        ],
        'libdesign': [
                'verCode' : 1,
                'verName': '1.0.0'
        ],
        'rxbus'     : [
                'verCode' : 1,
                'verName': '1.0.0'
        ],
        'jnilib'    : [
                'verCode' : 1,
                'verName': '1.0.0'
        ],
        'old'       : [
                'verCode' : 1,
                'verName': '1.0.0'
        ]
]

allprojects { child ->
    //exclude root project and project which has child project.
    if (child == rootProject) return;
    if (child.getSubprojects().size() > 0) return;
        if (versions.containsKey(child.name)){
                versions[child.name].each {key,value->
                        child.ext.set(key,value)
                }
        }else{
                if(!excludes.contains(child.name)){
                        throw new GradleException("have you declare '${child.name}' in 'version'? ")
                        throw new GradleException("have you declare '${child.name}' in 'versions'? ")
                }
        }
}
