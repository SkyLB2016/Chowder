Java教程笔记
●01.Java特性
　　1）JAVA语言是简单的：类似C
　　2）JAVA语言是面向对象的：
　　3）JAVA语言是分布式的：
　　4）JAVA语言是健壮的：
　　5）JAVA语言是安全的：
　　6）JAVA语言是体系结构中立的：
　　7）JAVA语言是可移植的：
　　8）JAVA语言是解释型的：
　　9）JAVA语言是高性能的：
　　10）JAVA语言是多线程的：
　　11）JAVA语言是动态的：云端更新类。
●02.一些概念一系列对象的集合，通过调用彼此的方法来协同工作。彼此间的概念：对象，类，方法，变量.
　　1）对象：对象是类的一个实例，有具体的状态和行为（方法）；比如一个人：种族，名字等是状态（属性），去干什么是行为。
　　2）类：类是个模板，描述一类对象的行为和状态。
　　3）方法：方法就是行为，也就是做什么。所有的操作均在方法中执行
　　4）实例变量：也就是状态，属性，每个对象都有自己独特的实例变量。对象随着属性而变化。
●03.需要注意的
　　1）大小写敏感；
　　2）类名首字母大写，也就是大驼峰模式；
　　3）方法名为小驼峰模式；
　　4）原文件名与类名相同
　　5）主方法入口为：main
●04.Java标识符：
　　1）所有的标识符都应该以字母、美元符号$、下划线_ 开头，之后随意。
　　2）关键字不能作为标识符；
　　3）大小写敏感
●05.Java关键字，健另一篇笔记
●06.Java变量：
　　1）局部变量：
位于方法中，方法执行时创建，执行完毕后销毁；
不能用修饰符修饰
只在方法体中可见
内存位置是分布在栈上的
没有默认值，被声明后必须初始化，才可以使用。
　　2）成员变量（非静态）：
位于类中方法块之外；
对象创建后，其中的实例变量的值就跟着确定了；
可使用修饰符修饰；
八大基本类型有各自的默认值，其他类则为null。
　　3）静态变量（类变量）：
位于类中，方法块之外，static修饰的变量；
在内存中只有一份拷贝，存储在静态存储区，经常被使用为常量，偶尔用作变量；
类名直接使用。
●07.继承
　　1）在Java中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。
　　2）利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）。
●08.接口
　　1）在Java中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。
　　3）接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。
●09.构造方法：每个类都有默认构造方法（隐式的方法），不带参数；要是自己重写了，那默认的就没有了，需要的话，可以自己定义。
●10.创建对象的过程：
　　1）声明：声明一个对象，也就是变量，包含对象名称和对象类型。
　　2）实例化：使用new关键字来创建一个对象。
　　3）初始化：使用new关键字来创建对象时，会调用构造方法来初始化对象。
●11.Java基本数据类型：变量就是申请内存来存储值，即创建变量就需要分配内存。内存管理系统根据变量的类型来为变量分配存储空间。
　　1）内置数据类型：八种基本类型，都有对应的包装类。
　　2）引用数据类型：由类的构造函数创建，变量类型一旦声明后不可改变，默认值为null。
　　3）Java常量：指不能改变的量，final符修饰的变量。
●12.StringBuilder与StringBuffer最大的不同在于，StringBuilder的方法不是线程安全的，也是就多线程访问的时候可能没同步，也就是没有锁机制，自然也就比StringBuffer快
●13.IO流
　　一、Java流的分类
　　1）按流向分:
　　输入流: 程序可以从中读取数据的流。
　　输出流: 程序能向其中写入数据的流。
　　2）按数据传输单位分:
　　字节流: 以字节为单位传输数据的流，通常用来读取二进制数据，如图象和声音。
　　字符流: 以Unicode字符为单位传输数据的流，通常用来读写文本信息。
　　3）按功能分:
　　节点流: 用于直接操作目标设备的流
　　过滤流: 是对一个已存在的流的链接和封装，通过对数据进行处理为程序提供功能强大、灵活的读写功能。
　　二、java.io常用类，位于JDK的java.io包中，都分别继承自以下四种抽象流类：
　　1）InputStream：输入流，用于向程序中输入数据的，字节流，单位：字节byte（8位）。
　　2）OutputSteam：输出流，程序用于向外输出数据的，字节流，单位：字节byte（8位）。
　　3）Reader：输入流，用于向程序中输入数据的，单位：字符char（16位）。
　　4）Writer：输出流，程序用于向外输出数据的，单位：字符char（16位）。
　　5）InputStreamReader将InputStream转化成Reader
　　6）OutputStreamWriter将OutputStream转化成Writer
●14.
　　1）
●15.
　　1）

1
2
3
4
5
6
7
8
9